//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolucaoPetSpa.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarFuncionario", ReplyAction="http://tempuri.org/IService1/SelecionarFuncionarioResponse")]
        Biblioteca.ClassesBasicas.Funcionario[] SelecionarFuncionario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarFuncionario", ReplyAction="http://tempuri.org/IService1/SelecionarFuncionarioResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Funcionario[]> SelecionarFuncionarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirFuncionario", ReplyAction="http://tempuri.org/IService1/InserirFuncionarioResponse")]
        void InserirFuncionario(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirFuncionario", ReplyAction="http://tempuri.org/IService1/InserirFuncionarioResponse")]
        System.Threading.Tasks.Task InserirFuncionarioAsync(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarFuncionario", ReplyAction="http://tempuri.org/IService1/AtualizarFuncionarioResponse")]
        void AtualizarFuncionario(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarFuncionario", ReplyAction="http://tempuri.org/IService1/AtualizarFuncionarioResponse")]
        System.Threading.Tasks.Task AtualizarFuncionarioAsync(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFuncionario", ReplyAction="http://tempuri.org/IService1/DeleteFuncionarioResponse")]
        void DeleteFuncionario(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFuncionario", ReplyAction="http://tempuri.org/IService1/DeleteFuncionarioResponse")]
        System.Threading.Tasks.Task DeleteFuncionarioAsync(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxFuncao", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxFuncaoResponse")]
        Biblioteca.ClassesBasicas.Funcionario[] SelecionaComboBoxFuncao(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxFuncao", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxFuncaoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Funcionario[]> SelecionaComboBoxFuncaoAsync(Biblioteca.ClassesBasicas.Funcionario F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarServico", ReplyAction="http://tempuri.org/IService1/SelecionarServicoResponse")]
        Biblioteca.ClassesBasicas.Servico[] SelecionarServico();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarServico", ReplyAction="http://tempuri.org/IService1/SelecionarServicoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Servico[]> SelecionarServicoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirServico", ReplyAction="http://tempuri.org/IService1/InserirServicoResponse")]
        void InserirServico(Biblioteca.ClassesBasicas.Servico S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirServico", ReplyAction="http://tempuri.org/IService1/InserirServicoResponse")]
        System.Threading.Tasks.Task InserirServicoAsync(Biblioteca.ClassesBasicas.Servico S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarServico", ReplyAction="http://tempuri.org/IService1/AtualizarServicoResponse")]
        void AtualizarServico(Biblioteca.ClassesBasicas.Servico S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarServico", ReplyAction="http://tempuri.org/IService1/AtualizarServicoResponse")]
        System.Threading.Tasks.Task AtualizarServicoAsync(Biblioteca.ClassesBasicas.Servico S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteServico", ReplyAction="http://tempuri.org/IService1/DeleteServicoResponse")]
        void DeleteServico(Biblioteca.ClassesBasicas.Servico S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteServico", ReplyAction="http://tempuri.org/IService1/DeleteServicoResponse")]
        System.Threading.Tasks.Task DeleteServicoAsync(Biblioteca.ClassesBasicas.Servico S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxServico", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxServicoResponse")]
        Biblioteca.ClassesBasicas.Servico[] SelecionaComboBoxServico();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxServico", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxServicoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Servico[]> SelecionaComboBoxServicoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEndereco", ReplyAction="http://tempuri.org/IService1/SelecionarEnderecoResponse")]
        Biblioteca.ClassesBasicas.Endereco[] SelecionarEndereco();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEndereco", ReplyAction="http://tempuri.org/IService1/SelecionarEnderecoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Endereco[]> SelecionarEnderecoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEnderecoCliente", ReplyAction="http://tempuri.org/IService1/SelecionarEnderecoClienteResponse")]
        Biblioteca.ClassesBasicas.Endereco[] SelecionarEnderecoCliente(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEnderecoCliente", ReplyAction="http://tempuri.org/IService1/SelecionarEnderecoClienteResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Endereco[]> SelecionarEnderecoClienteAsync(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEnderecosDoCPF", ReplyAction="http://tempuri.org/IService1/SelecionarEnderecosDoCPFResponse")]
        Biblioteca.ClassesBasicas.Endereco[] SelecionarEnderecosDoCPF(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarEnderecosDoCPF", ReplyAction="http://tempuri.org/IService1/SelecionarEnderecosDoCPFResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Endereco[]> SelecionarEnderecosDoCPFAsync(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirEndereco", ReplyAction="http://tempuri.org/IService1/InserirEnderecoResponse")]
        void InserirEndereco(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirEndereco", ReplyAction="http://tempuri.org/IService1/InserirEnderecoResponse")]
        System.Threading.Tasks.Task InserirEnderecoAsync(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarEndereco", ReplyAction="http://tempuri.org/IService1/AtualizarEnderecoResponse")]
        void AtualizarEndereco(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarEndereco", ReplyAction="http://tempuri.org/IService1/AtualizarEnderecoResponse")]
        System.Threading.Tasks.Task AtualizarEnderecoAsync(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEndereco", ReplyAction="http://tempuri.org/IService1/DeleteEnderecoResponse")]
        void DeleteEndereco(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEndereco", ReplyAction="http://tempuri.org/IService1/DeleteEnderecoResponse")]
        System.Threading.Tasks.Task DeleteEnderecoAsync(Biblioteca.ClassesBasicas.Endereco E);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarCliente", ReplyAction="http://tempuri.org/IService1/SelecionarClienteResponse")]
        Biblioteca.ClassesBasicas.Cliente[] SelecionarCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarCliente", ReplyAction="http://tempuri.org/IService1/SelecionarClienteResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Cliente[]> SelecionarClienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirCliente", ReplyAction="http://tempuri.org/IService1/InserirClienteResponse")]
        void InserirCliente(Biblioteca.ClassesBasicas.Cliente C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirCliente", ReplyAction="http://tempuri.org/IService1/InserirClienteResponse")]
        System.Threading.Tasks.Task InserirClienteAsync(Biblioteca.ClassesBasicas.Cliente C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarCliente", ReplyAction="http://tempuri.org/IService1/AtualizarClienteResponse")]
        void AtualizarCliente(Biblioteca.ClassesBasicas.Cliente C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarCliente", ReplyAction="http://tempuri.org/IService1/AtualizarClienteResponse")]
        System.Threading.Tasks.Task AtualizarClienteAsync(Biblioteca.ClassesBasicas.Cliente C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCliente", ReplyAction="http://tempuri.org/IService1/DeleteClienteResponse")]
        void DeleteCliente(Biblioteca.ClassesBasicas.Cliente C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCliente", ReplyAction="http://tempuri.org/IService1/DeleteClienteResponse")]
        System.Threading.Tasks.Task DeleteClienteAsync(Biblioteca.ClassesBasicas.Cliente C);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxCliente", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxClienteResponse")]
        Biblioteca.ClassesBasicas.Cliente[] SelecionaComboBoxCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxCliente", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxClienteResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Cliente[]> SelecionaComboBoxClienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAtendimento", ReplyAction="http://tempuri.org/IService1/SelecionarAtendimentoResponse")]
        Biblioteca.ClassesBasicas.Atendimento[] SelecionarAtendimento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAtendimento", ReplyAction="http://tempuri.org/IService1/SelecionarAtendimentoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarAtendimentoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirAtendimento", ReplyAction="http://tempuri.org/IService1/InserirAtendimentoResponse")]
        void InserirAtendimento(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirAtendimento", ReplyAction="http://tempuri.org/IService1/InserirAtendimentoResponse")]
        System.Threading.Tasks.Task InserirAtendimentoAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarAtendimento", ReplyAction="http://tempuri.org/IService1/AtualizarAtendimentoResponse")]
        void AtualizarAtendimento(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarAtendimento", ReplyAction="http://tempuri.org/IService1/AtualizarAtendimentoResponse")]
        System.Threading.Tasks.Task AtualizarAtendimentoAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAtendimento", ReplyAction="http://tempuri.org/IService1/DeleteAtendimentoResponse")]
        void DeleteAtendimento(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAtendimento", ReplyAction="http://tempuri.org/IService1/DeleteAtendimentoResponse")]
        System.Threading.Tasks.Task DeleteAtendimentoAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAgendaPorAnimal", ReplyAction="http://tempuri.org/IService1/SelecionarAgendaPorAnimalResponse")]
        Biblioteca.ClassesBasicas.Atendimento[] SelecionarAgendaPorAnimal(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAgendaPorAnimal", ReplyAction="http://tempuri.org/IService1/SelecionarAgendaPorAnimalResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarAgendaPorAnimalAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAgendaPorCpf", ReplyAction="http://tempuri.org/IService1/SelecionarAgendaPorCpfResponse")]
        Biblioteca.ClassesBasicas.Atendimento[] SelecionarAgendaPorCpf(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAgendaPorCpf", ReplyAction="http://tempuri.org/IService1/SelecionarAgendaPorCpfResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarAgendaPorCpfAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaComboBoxATAnimal", ReplyAction="http://tempuri.org/IService1/ListaComboBoxATAnimalResponse")]
        Biblioteca.ClassesBasicas.Atendimento[] ListaComboBoxATAnimal(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaComboBoxATAnimal", ReplyAction="http://tempuri.org/IService1/ListaComboBoxATAnimalResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> ListaComboBoxATAnimalAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarComboBoxFuncionario", ReplyAction="http://tempuri.org/IService1/SelecionarComboBoxFuncionarioResponse")]
        Biblioteca.ClassesBasicas.Atendimento[] SelecionarComboBoxFuncionario(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarComboBoxFuncionario", ReplyAction="http://tempuri.org/IService1/SelecionarComboBoxFuncionarioResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarComboBoxFuncionarioAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarClientePorCPF", ReplyAction="http://tempuri.org/IService1/SelecionarClientePorCPFResponse")]
        Biblioteca.ClassesBasicas.Atendimento[] SelecionarClientePorCPF(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarClientePorCPF", ReplyAction="http://tempuri.org/IService1/SelecionarClientePorCPFResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarClientePorCPFAsync(Biblioteca.ClassesBasicas.Atendimento A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimal", ReplyAction="http://tempuri.org/IService1/SelecionarAnimalResponse")]
        Biblioteca.ClassesBasicas.Animal[] SelecionarAnimal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimal", ReplyAction="http://tempuri.org/IService1/SelecionarAnimalResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAClientePorCPF", ReplyAction="http://tempuri.org/IService1/SelecionarAClientePorCPFResponse")]
        Biblioteca.ClassesBasicas.Animal[] SelecionarAClientePorCPF(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAClientePorCPF", ReplyAction="http://tempuri.org/IService1/SelecionarAClientePorCPFResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAClientePorCPFAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimaisDoCPF", ReplyAction="http://tempuri.org/IService1/SelecionarAnimaisDoCPFResponse")]
        Biblioteca.ClassesBasicas.Animal[] SelecionarAnimaisDoCPF(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimaisDoCPF", ReplyAction="http://tempuri.org/IService1/SelecionarAnimaisDoCPFResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimaisDoCPFAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimalTipo", ReplyAction="http://tempuri.org/IService1/SelecionarAnimalTipoResponse")]
        Biblioteca.ClassesBasicas.Animal[] SelecionarAnimalTipo(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimalTipo", ReplyAction="http://tempuri.org/IService1/SelecionarAnimalTipoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimalTipoAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimalRaca", ReplyAction="http://tempuri.org/IService1/SelecionarAnimalRacaResponse")]
        Biblioteca.ClassesBasicas.Animal[] SelecionarAnimalRaca(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAnimalRaca", ReplyAction="http://tempuri.org/IService1/SelecionarAnimalRacaResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimalRacaAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirAnimal", ReplyAction="http://tempuri.org/IService1/InserirAnimalResponse")]
        void InserirAnimal(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirAnimal", ReplyAction="http://tempuri.org/IService1/InserirAnimalResponse")]
        System.Threading.Tasks.Task InserirAnimalAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarAnimal", ReplyAction="http://tempuri.org/IService1/AtualizarAnimalResponse")]
        void AtualizarAnimal(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarAnimal", ReplyAction="http://tempuri.org/IService1/AtualizarAnimalResponse")]
        System.Threading.Tasks.Task AtualizarAnimalAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAnimal", ReplyAction="http://tempuri.org/IService1/DeleteAnimalResponse")]
        void DeleteAnimal(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAnimal", ReplyAction="http://tempuri.org/IService1/DeleteAnimalResponse")]
        System.Threading.Tasks.Task DeleteAnimalAsync(Biblioteca.ClassesBasicas.Animal A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxAnimal", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxAnimalResponse")]
        Biblioteca.ClassesBasicas.Animal[] SelecionaComboBoxAnimal(Biblioteca.ClassesBasicas.Cliente A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionaComboBoxAnimal", ReplyAction="http://tempuri.org/IService1/SelecionaComboBoxAnimalResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionaComboBoxAnimalAsync(Biblioteca.ClassesBasicas.Cliente A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAgenda", ReplyAction="http://tempuri.org/IService1/SelecionarAgendaResponse")]
        Biblioteca.ClassesBasicas.Agenda[] SelecionarAgenda();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarAgenda", ReplyAction="http://tempuri.org/IService1/SelecionarAgendaResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Agenda[]> SelecionarAgendaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirAgenda", ReplyAction="http://tempuri.org/IService1/InserirAgendaResponse")]
        void InserirAgenda(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirAgenda", ReplyAction="http://tempuri.org/IService1/InserirAgendaResponse")]
        System.Threading.Tasks.Task InserirAgendaAsync(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarAgenda", ReplyAction="http://tempuri.org/IService1/AtualizarAgendaResponse")]
        void AtualizarAgenda(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarAgenda", ReplyAction="http://tempuri.org/IService1/AtualizarAgendaResponse")]
        System.Threading.Tasks.Task AtualizarAgendaAsync(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAgenda", ReplyAction="http://tempuri.org/IService1/DeleteAgendaResponse")]
        void DeleteAgenda(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAgenda", ReplyAction="http://tempuri.org/IService1/DeleteAgendaResponse")]
        System.Threading.Tasks.Task DeleteAgendaAsync(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CancelarAgenda", ReplyAction="http://tempuri.org/IService1/CancelarAgendaResponse")]
        void CancelarAgenda(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CancelarAgenda", ReplyAction="http://tempuri.org/IService1/CancelarAgendaResponse")]
        System.Threading.Tasks.Task CancelarAgendaAsync(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarPorCodigo", ReplyAction="http://tempuri.org/IService1/SelecionarPorCodigoResponse")]
        Biblioteca.ClassesBasicas.Agenda[] SelecionarPorCodigo(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarPorCodigo", ReplyAction="http://tempuri.org/IService1/SelecionarPorCodigoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Agenda[]> SelecionarPorCodigoAsync(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarExistencia", ReplyAction="http://tempuri.org/IService1/VerificarExistenciaResponse")]
        void VerificarExistencia(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificarExistencia", ReplyAction="http://tempuri.org/IService1/VerificarExistenciaResponse")]
        System.Threading.Tasks.Task VerificarExistenciaAsync(Biblioteca.ClassesBasicas.Agenda A);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarRaca", ReplyAction="http://tempuri.org/IService1/SelecionarRacaResponse")]
        Biblioteca.ClassesBasicas.Raca[] SelecionarRaca();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarRaca", ReplyAction="http://tempuri.org/IService1/SelecionarRacaResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Raca[]> SelecionarRacaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarRacaTipo", ReplyAction="http://tempuri.org/IService1/SelecionarRacaTipoResponse")]
        Biblioteca.ClassesBasicas.Raca[] SelecionarRacaTipo(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarRacaTipo", ReplyAction="http://tempuri.org/IService1/SelecionarRacaTipoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Raca[]> SelecionarRacaTipoAsync(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirRaca", ReplyAction="http://tempuri.org/IService1/InserirRacaResponse")]
        void InserirRaca(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirRaca", ReplyAction="http://tempuri.org/IService1/InserirRacaResponse")]
        System.Threading.Tasks.Task InserirRacaAsync(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarRaca", ReplyAction="http://tempuri.org/IService1/AtualizarRacaResponse")]
        void AtualizarRaca(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarRaca", ReplyAction="http://tempuri.org/IService1/AtualizarRacaResponse")]
        System.Threading.Tasks.Task AtualizarRacaAsync(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRaca", ReplyAction="http://tempuri.org/IService1/DeleteRacaResponse")]
        void DeleteRaca(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRaca", ReplyAction="http://tempuri.org/IService1/DeleteRacaResponse")]
        System.Threading.Tasks.Task DeleteRacaAsync(Biblioteca.ClassesBasicas.Raca R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarFuncao", ReplyAction="http://tempuri.org/IService1/SelecionarFuncaoResponse")]
        Biblioteca.ClassesBasicas.Funcao[] SelecionarFuncao();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarFuncao", ReplyAction="http://tempuri.org/IService1/SelecionarFuncaoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Funcao[]> SelecionarFuncaoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirFuncao", ReplyAction="http://tempuri.org/IService1/InserirFuncaoResponse")]
        void InserirFuncao(Biblioteca.ClassesBasicas.Funcao F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirFuncao", ReplyAction="http://tempuri.org/IService1/InserirFuncaoResponse")]
        System.Threading.Tasks.Task InserirFuncaoAsync(Biblioteca.ClassesBasicas.Funcao F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarFuncao", ReplyAction="http://tempuri.org/IService1/AtualizarFuncaoResponse")]
        void AtualizarFuncao(Biblioteca.ClassesBasicas.Funcao F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarFuncao", ReplyAction="http://tempuri.org/IService1/AtualizarFuncaoResponse")]
        System.Threading.Tasks.Task AtualizarFuncaoAsync(Biblioteca.ClassesBasicas.Funcao F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFuncao", ReplyAction="http://tempuri.org/IService1/DeleteFuncaoResponse")]
        void DeleteFuncao(Biblioteca.ClassesBasicas.Funcao F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFuncao", ReplyAction="http://tempuri.org/IService1/DeleteFuncaoResponse")]
        System.Threading.Tasks.Task DeleteFuncaoAsync(Biblioteca.ClassesBasicas.Funcao F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarTipo", ReplyAction="http://tempuri.org/IService1/SelecionarTipoResponse")]
        Biblioteca.ClassesBasicas.Tipo[] SelecionarTipo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelecionarTipo", ReplyAction="http://tempuri.org/IService1/SelecionarTipoResponse")]
        System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Tipo[]> SelecionarTipoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirTipo", ReplyAction="http://tempuri.org/IService1/InserirTipoResponse")]
        void InserirTipo(Biblioteca.ClassesBasicas.Tipo T);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InserirTipo", ReplyAction="http://tempuri.org/IService1/InserirTipoResponse")]
        System.Threading.Tasks.Task InserirTipoAsync(Biblioteca.ClassesBasicas.Tipo T);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarTipo", ReplyAction="http://tempuri.org/IService1/AtualizarTipoResponse")]
        void AtualizarTipo(Biblioteca.ClassesBasicas.Tipo T);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AtualizarTipo", ReplyAction="http://tempuri.org/IService1/AtualizarTipoResponse")]
        System.Threading.Tasks.Task AtualizarTipoAsync(Biblioteca.ClassesBasicas.Tipo T);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTipo", ReplyAction="http://tempuri.org/IService1/DeleteTipoResponse")]
        void DeleteTipo(Biblioteca.ClassesBasicas.Tipo T);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTipo", ReplyAction="http://tempuri.org/IService1/DeleteTipoResponse")]
        System.Threading.Tasks.Task DeleteTipoAsync(Biblioteca.ClassesBasicas.Tipo T);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SolucaoPetSpa.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SolucaoPetSpa.ServiceReference1.IService1>, SolucaoPetSpa.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Biblioteca.ClassesBasicas.Funcionario[] SelecionarFuncionario() {
            return base.Channel.SelecionarFuncionario();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Funcionario[]> SelecionarFuncionarioAsync() {
            return base.Channel.SelecionarFuncionarioAsync();
        }
        
        public void InserirFuncionario(Biblioteca.ClassesBasicas.Funcionario F) {
            base.Channel.InserirFuncionario(F);
        }
        
        public System.Threading.Tasks.Task InserirFuncionarioAsync(Biblioteca.ClassesBasicas.Funcionario F) {
            return base.Channel.InserirFuncionarioAsync(F);
        }
        
        public void AtualizarFuncionario(Biblioteca.ClassesBasicas.Funcionario F) {
            base.Channel.AtualizarFuncionario(F);
        }
        
        public System.Threading.Tasks.Task AtualizarFuncionarioAsync(Biblioteca.ClassesBasicas.Funcionario F) {
            return base.Channel.AtualizarFuncionarioAsync(F);
        }
        
        public void DeleteFuncionario(Biblioteca.ClassesBasicas.Funcionario F) {
            base.Channel.DeleteFuncionario(F);
        }
        
        public System.Threading.Tasks.Task DeleteFuncionarioAsync(Biblioteca.ClassesBasicas.Funcionario F) {
            return base.Channel.DeleteFuncionarioAsync(F);
        }
        
        public Biblioteca.ClassesBasicas.Funcionario[] SelecionaComboBoxFuncao(Biblioteca.ClassesBasicas.Funcionario F) {
            return base.Channel.SelecionaComboBoxFuncao(F);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Funcionario[]> SelecionaComboBoxFuncaoAsync(Biblioteca.ClassesBasicas.Funcionario F) {
            return base.Channel.SelecionaComboBoxFuncaoAsync(F);
        }
        
        public Biblioteca.ClassesBasicas.Servico[] SelecionarServico() {
            return base.Channel.SelecionarServico();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Servico[]> SelecionarServicoAsync() {
            return base.Channel.SelecionarServicoAsync();
        }
        
        public void InserirServico(Biblioteca.ClassesBasicas.Servico S) {
            base.Channel.InserirServico(S);
        }
        
        public System.Threading.Tasks.Task InserirServicoAsync(Biblioteca.ClassesBasicas.Servico S) {
            return base.Channel.InserirServicoAsync(S);
        }
        
        public void AtualizarServico(Biblioteca.ClassesBasicas.Servico S) {
            base.Channel.AtualizarServico(S);
        }
        
        public System.Threading.Tasks.Task AtualizarServicoAsync(Biblioteca.ClassesBasicas.Servico S) {
            return base.Channel.AtualizarServicoAsync(S);
        }
        
        public void DeleteServico(Biblioteca.ClassesBasicas.Servico S) {
            base.Channel.DeleteServico(S);
        }
        
        public System.Threading.Tasks.Task DeleteServicoAsync(Biblioteca.ClassesBasicas.Servico S) {
            return base.Channel.DeleteServicoAsync(S);
        }
        
        public Biblioteca.ClassesBasicas.Servico[] SelecionaComboBoxServico() {
            return base.Channel.SelecionaComboBoxServico();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Servico[]> SelecionaComboBoxServicoAsync() {
            return base.Channel.SelecionaComboBoxServicoAsync();
        }
        
        public Biblioteca.ClassesBasicas.Endereco[] SelecionarEndereco() {
            return base.Channel.SelecionarEndereco();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Endereco[]> SelecionarEnderecoAsync() {
            return base.Channel.SelecionarEnderecoAsync();
        }
        
        public Biblioteca.ClassesBasicas.Endereco[] SelecionarEnderecoCliente(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.SelecionarEnderecoCliente(E);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Endereco[]> SelecionarEnderecoClienteAsync(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.SelecionarEnderecoClienteAsync(E);
        }
        
        public Biblioteca.ClassesBasicas.Endereco[] SelecionarEnderecosDoCPF(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.SelecionarEnderecosDoCPF(E);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Endereco[]> SelecionarEnderecosDoCPFAsync(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.SelecionarEnderecosDoCPFAsync(E);
        }
        
        public void InserirEndereco(Biblioteca.ClassesBasicas.Endereco E) {
            base.Channel.InserirEndereco(E);
        }
        
        public System.Threading.Tasks.Task InserirEnderecoAsync(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.InserirEnderecoAsync(E);
        }
        
        public void AtualizarEndereco(Biblioteca.ClassesBasicas.Endereco E) {
            base.Channel.AtualizarEndereco(E);
        }
        
        public System.Threading.Tasks.Task AtualizarEnderecoAsync(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.AtualizarEnderecoAsync(E);
        }
        
        public void DeleteEndereco(Biblioteca.ClassesBasicas.Endereco E) {
            base.Channel.DeleteEndereco(E);
        }
        
        public System.Threading.Tasks.Task DeleteEnderecoAsync(Biblioteca.ClassesBasicas.Endereco E) {
            return base.Channel.DeleteEnderecoAsync(E);
        }
        
        public Biblioteca.ClassesBasicas.Cliente[] SelecionarCliente() {
            return base.Channel.SelecionarCliente();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Cliente[]> SelecionarClienteAsync() {
            return base.Channel.SelecionarClienteAsync();
        }
        
        public void InserirCliente(Biblioteca.ClassesBasicas.Cliente C) {
            base.Channel.InserirCliente(C);
        }
        
        public System.Threading.Tasks.Task InserirClienteAsync(Biblioteca.ClassesBasicas.Cliente C) {
            return base.Channel.InserirClienteAsync(C);
        }
        
        public void AtualizarCliente(Biblioteca.ClassesBasicas.Cliente C) {
            base.Channel.AtualizarCliente(C);
        }
        
        public System.Threading.Tasks.Task AtualizarClienteAsync(Biblioteca.ClassesBasicas.Cliente C) {
            return base.Channel.AtualizarClienteAsync(C);
        }
        
        public void DeleteCliente(Biblioteca.ClassesBasicas.Cliente C) {
            base.Channel.DeleteCliente(C);
        }
        
        public System.Threading.Tasks.Task DeleteClienteAsync(Biblioteca.ClassesBasicas.Cliente C) {
            return base.Channel.DeleteClienteAsync(C);
        }
        
        public Biblioteca.ClassesBasicas.Cliente[] SelecionaComboBoxCliente() {
            return base.Channel.SelecionaComboBoxCliente();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Cliente[]> SelecionaComboBoxClienteAsync() {
            return base.Channel.SelecionaComboBoxClienteAsync();
        }
        
        public Biblioteca.ClassesBasicas.Atendimento[] SelecionarAtendimento() {
            return base.Channel.SelecionarAtendimento();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarAtendimentoAsync() {
            return base.Channel.SelecionarAtendimentoAsync();
        }
        
        public void InserirAtendimento(Biblioteca.ClassesBasicas.Atendimento A) {
            base.Channel.InserirAtendimento(A);
        }
        
        public System.Threading.Tasks.Task InserirAtendimentoAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.InserirAtendimentoAsync(A);
        }
        
        public void AtualizarAtendimento(Biblioteca.ClassesBasicas.Atendimento A) {
            base.Channel.AtualizarAtendimento(A);
        }
        
        public System.Threading.Tasks.Task AtualizarAtendimentoAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.AtualizarAtendimentoAsync(A);
        }
        
        public void DeleteAtendimento(Biblioteca.ClassesBasicas.Atendimento A) {
            base.Channel.DeleteAtendimento(A);
        }
        
        public System.Threading.Tasks.Task DeleteAtendimentoAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.DeleteAtendimentoAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Atendimento[] SelecionarAgendaPorAnimal(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarAgendaPorAnimal(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarAgendaPorAnimalAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarAgendaPorAnimalAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Atendimento[] SelecionarAgendaPorCpf(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarAgendaPorCpf(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarAgendaPorCpfAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarAgendaPorCpfAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Atendimento[] ListaComboBoxATAnimal(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.ListaComboBoxATAnimal(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> ListaComboBoxATAnimalAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.ListaComboBoxATAnimalAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Atendimento[] SelecionarComboBoxFuncionario(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarComboBoxFuncionario(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarComboBoxFuncionarioAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarComboBoxFuncionarioAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Atendimento[] SelecionarClientePorCPF(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarClientePorCPF(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Atendimento[]> SelecionarClientePorCPFAsync(Biblioteca.ClassesBasicas.Atendimento A) {
            return base.Channel.SelecionarClientePorCPFAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Animal[] SelecionarAnimal() {
            return base.Channel.SelecionarAnimal();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimalAsync() {
            return base.Channel.SelecionarAnimalAsync();
        }
        
        public Biblioteca.ClassesBasicas.Animal[] SelecionarAClientePorCPF(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAClientePorCPF(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAClientePorCPFAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAClientePorCPFAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Animal[] SelecionarAnimaisDoCPF(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAnimaisDoCPF(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimaisDoCPFAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAnimaisDoCPFAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Animal[] SelecionarAnimalTipo(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAnimalTipo(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimalTipoAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAnimalTipoAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Animal[] SelecionarAnimalRaca(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAnimalRaca(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionarAnimalRacaAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.SelecionarAnimalRacaAsync(A);
        }
        
        public void InserirAnimal(Biblioteca.ClassesBasicas.Animal A) {
            base.Channel.InserirAnimal(A);
        }
        
        public System.Threading.Tasks.Task InserirAnimalAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.InserirAnimalAsync(A);
        }
        
        public void AtualizarAnimal(Biblioteca.ClassesBasicas.Animal A) {
            base.Channel.AtualizarAnimal(A);
        }
        
        public System.Threading.Tasks.Task AtualizarAnimalAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.AtualizarAnimalAsync(A);
        }
        
        public void DeleteAnimal(Biblioteca.ClassesBasicas.Animal A) {
            base.Channel.DeleteAnimal(A);
        }
        
        public System.Threading.Tasks.Task DeleteAnimalAsync(Biblioteca.ClassesBasicas.Animal A) {
            return base.Channel.DeleteAnimalAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Animal[] SelecionaComboBoxAnimal(Biblioteca.ClassesBasicas.Cliente A) {
            return base.Channel.SelecionaComboBoxAnimal(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Animal[]> SelecionaComboBoxAnimalAsync(Biblioteca.ClassesBasicas.Cliente A) {
            return base.Channel.SelecionaComboBoxAnimalAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Agenda[] SelecionarAgenda() {
            return base.Channel.SelecionarAgenda();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Agenda[]> SelecionarAgendaAsync() {
            return base.Channel.SelecionarAgendaAsync();
        }
        
        public void InserirAgenda(Biblioteca.ClassesBasicas.Agenda A) {
            base.Channel.InserirAgenda(A);
        }
        
        public System.Threading.Tasks.Task InserirAgendaAsync(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.InserirAgendaAsync(A);
        }
        
        public void AtualizarAgenda(Biblioteca.ClassesBasicas.Agenda A) {
            base.Channel.AtualizarAgenda(A);
        }
        
        public System.Threading.Tasks.Task AtualizarAgendaAsync(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.AtualizarAgendaAsync(A);
        }
        
        public void DeleteAgenda(Biblioteca.ClassesBasicas.Agenda A) {
            base.Channel.DeleteAgenda(A);
        }
        
        public System.Threading.Tasks.Task DeleteAgendaAsync(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.DeleteAgendaAsync(A);
        }
        
        public void CancelarAgenda(Biblioteca.ClassesBasicas.Agenda A) {
            base.Channel.CancelarAgenda(A);
        }
        
        public System.Threading.Tasks.Task CancelarAgendaAsync(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.CancelarAgendaAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Agenda[] SelecionarPorCodigo(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.SelecionarPorCodigo(A);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Agenda[]> SelecionarPorCodigoAsync(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.SelecionarPorCodigoAsync(A);
        }
        
        public void VerificarExistencia(Biblioteca.ClassesBasicas.Agenda A) {
            base.Channel.VerificarExistencia(A);
        }
        
        public System.Threading.Tasks.Task VerificarExistenciaAsync(Biblioteca.ClassesBasicas.Agenda A) {
            return base.Channel.VerificarExistenciaAsync(A);
        }
        
        public Biblioteca.ClassesBasicas.Raca[] SelecionarRaca() {
            return base.Channel.SelecionarRaca();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Raca[]> SelecionarRacaAsync() {
            return base.Channel.SelecionarRacaAsync();
        }
        
        public Biblioteca.ClassesBasicas.Raca[] SelecionarRacaTipo(Biblioteca.ClassesBasicas.Raca R) {
            return base.Channel.SelecionarRacaTipo(R);
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Raca[]> SelecionarRacaTipoAsync(Biblioteca.ClassesBasicas.Raca R) {
            return base.Channel.SelecionarRacaTipoAsync(R);
        }
        
        public void InserirRaca(Biblioteca.ClassesBasicas.Raca R) {
            base.Channel.InserirRaca(R);
        }
        
        public System.Threading.Tasks.Task InserirRacaAsync(Biblioteca.ClassesBasicas.Raca R) {
            return base.Channel.InserirRacaAsync(R);
        }
        
        public void AtualizarRaca(Biblioteca.ClassesBasicas.Raca R) {
            base.Channel.AtualizarRaca(R);
        }
        
        public System.Threading.Tasks.Task AtualizarRacaAsync(Biblioteca.ClassesBasicas.Raca R) {
            return base.Channel.AtualizarRacaAsync(R);
        }
        
        public void DeleteRaca(Biblioteca.ClassesBasicas.Raca R) {
            base.Channel.DeleteRaca(R);
        }
        
        public System.Threading.Tasks.Task DeleteRacaAsync(Biblioteca.ClassesBasicas.Raca R) {
            return base.Channel.DeleteRacaAsync(R);
        }
        
        public Biblioteca.ClassesBasicas.Funcao[] SelecionarFuncao() {
            return base.Channel.SelecionarFuncao();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Funcao[]> SelecionarFuncaoAsync() {
            return base.Channel.SelecionarFuncaoAsync();
        }
        
        public void InserirFuncao(Biblioteca.ClassesBasicas.Funcao F) {
            base.Channel.InserirFuncao(F);
        }
        
        public System.Threading.Tasks.Task InserirFuncaoAsync(Biblioteca.ClassesBasicas.Funcao F) {
            return base.Channel.InserirFuncaoAsync(F);
        }
        
        public void AtualizarFuncao(Biblioteca.ClassesBasicas.Funcao F) {
            base.Channel.AtualizarFuncao(F);
        }
        
        public System.Threading.Tasks.Task AtualizarFuncaoAsync(Biblioteca.ClassesBasicas.Funcao F) {
            return base.Channel.AtualizarFuncaoAsync(F);
        }
        
        public void DeleteFuncao(Biblioteca.ClassesBasicas.Funcao F) {
            base.Channel.DeleteFuncao(F);
        }
        
        public System.Threading.Tasks.Task DeleteFuncaoAsync(Biblioteca.ClassesBasicas.Funcao F) {
            return base.Channel.DeleteFuncaoAsync(F);
        }
        
        public Biblioteca.ClassesBasicas.Tipo[] SelecionarTipo() {
            return base.Channel.SelecionarTipo();
        }
        
        public System.Threading.Tasks.Task<Biblioteca.ClassesBasicas.Tipo[]> SelecionarTipoAsync() {
            return base.Channel.SelecionarTipoAsync();
        }
        
        public void InserirTipo(Biblioteca.ClassesBasicas.Tipo T) {
            base.Channel.InserirTipo(T);
        }
        
        public System.Threading.Tasks.Task InserirTipoAsync(Biblioteca.ClassesBasicas.Tipo T) {
            return base.Channel.InserirTipoAsync(T);
        }
        
        public void AtualizarTipo(Biblioteca.ClassesBasicas.Tipo T) {
            base.Channel.AtualizarTipo(T);
        }
        
        public System.Threading.Tasks.Task AtualizarTipoAsync(Biblioteca.ClassesBasicas.Tipo T) {
            return base.Channel.AtualizarTipoAsync(T);
        }
        
        public void DeleteTipo(Biblioteca.ClassesBasicas.Tipo T) {
            base.Channel.DeleteTipo(T);
        }
        
        public System.Threading.Tasks.Task DeleteTipoAsync(Biblioteca.ClassesBasicas.Tipo T) {
            return base.Channel.DeleteTipoAsync(T);
        }
    }
}
